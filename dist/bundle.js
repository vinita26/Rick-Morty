/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './../scss/mystyles.scss'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './../css/mystyles.css'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n//const RequestHandler = require(\"./requestHandler.js\");\n\n\n\n\n// document.write('<h1>' + requestHandler.processRequestsForGit() + '</h1>')\nprocessRequestsForGit = function () {\n    var myArray = [];\n    var myData = document.getElementById(\"userTextBox\").value;\n\n    //Extract Request Here  \n    if (myData == \"\") {\n        alert(\"Type Some Command\");\n    } else {\n        //      var createIndex = myData.search(\"get\");\n        if (myData.search(\"get repo\") != -1) {\n            // Get Repo Starts\n            alert(\"get repo\");\n\n            const uri = 'https://api.github.com/user/repos';\n            let token = 'token 178afe758be202b9d4edd25be5893f8bb6934209';\n\n            let h = new Headers();\n            h.append('Content-Type', 'application/json');\n            h.append('Authorization', 'token 178afe758be202b9d4edd25be5893f8bb6934209');\n            let req = new Request(uri, {\n                method: 'GET',\n                headers: h,\n                mode: 'cors'\n            });\n\n            fetch(req).then(response => {\n                statusCode = response.status;\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    debugger;\n                    setResponseInWidgetForView(\"viewRepo\", myArray, statusCode);\n                    throw new Error('No response found');\n                }\n            }).then(jsonData => {\n                myArray = jsonData;\n                debugger;\n                setRepoInWidsetResponseInWidgetForView(\"viewRepo\", myArray, statusCode);\n            }).catch(err => {\n                debugger;\n                setResponseInWidgetForView(\"viewRepo\", myArray, statusCode);\n                console.log(\"Error:\", err.message);\n            });\n        } //get repo ends here\n\n        else if (myData.search(\"get issue\") != -1) {\n                // Get Issue\n                alert(\"get issue\");\n\n                //const uri = 'https://api.github.com/user/repos';\n                let uri = 'https://api.github.com/repos/swat1508/repository-111/issues';\n                let token = 'token 178afe758be202b9d4edd25be5893f8bb6934209';\n\n                let h = new Headers();\n                h.append('Content-Type', 'application/json');\n                h.append('Authorization', 'token 178afe758be202b9d4edd25be5893f8bb6934209');\n                let req = new Request(uri, {\n                    method: 'GET',\n                    headers: h,\n                    mode: 'cors'\n                });\n\n                fetch(req).then(response => {\n                    statusCode = response.status;\n                    if (response.ok) {\n                        debugger;\n                        return response.json();\n                    } else {\n                        debugger;\n                        setResponseInWidgetForView(\"viewIssue\", myArray, statusCode);\n                        throw new Error('No response found');\n                    }\n                }).then(jsonData => {\n                    myArray = jsonData;\n                    debugger;\n                    setResponseInWidgetForView(\"viewIssue\", myArray, statusCode);\n                }).catch(err => {\n                    debugger;\n                    setResponseInWidgetForView(\"viewIssue\", myArray, statusCode);\n                    console.log(\"Error:\", err.message);\n                });\n            } //get issue ends here\n\n            else if (myData.search(\"create repo\") != -1) {\n                    //create repo starts\n                    alert(\"create repo\");\n\n                    var statusCode;\n                    var newRepoJson = {\n                        \"name\": \"repository 555\",\n                        \"description\": \"New Repo 555\",\n                        \"homepage\": \"https://github.com\",\n                        \"private\": false,\n                        \"has_issues\": true,\n                        \"has_wiki\": true\n                    };\n\n                    var authorizationToken = 'token  032dfa552e8662076ae3c61866629bd0be6a5a0c';\n                    let url = 'https://api.github.com/user/repos';\n                    fetch(url, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json; charset=utf-8\",\n                            \"Authorization\": authorizationToken\n                        },\n                        body: JSON.stringify(newRepoJson)\n                    }).then(response => {\n                        debugger;\n                        statusCode = response.status;\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            debugger;\n                            setRepoInWidgetForCreate(\"createRepo\", myArray, statusCode);\n                            // throw new Error('No response found');\n                        }\n                    }).then(jsonData => {\n                        myArray = jsonData;\n                        setRepoInWidgetForCreate(\"createRepo\", myArray, statusCode);\n                    }).catch(err => {\n                        debugger;\n                        console.log(\"Error:\", err.message);\n                    });\n                } //create repo ends\n\n                else if (myData.search(\"create issue\") != -1) {\n                        //create issue starts\n\n                        alert(\"create issue\");\n                        var statusCode;\n                        var newIssueJson = {\n                            \"title\": \"Third Issue\",\n                            \"body\": \"This is 3rd Issue\",\n                            \"assignees\": [\"swat1508\"],\n                            \"labels\": [\"bug\"]\n                        };\n\n                        var authorizationToken = 'token  032dfa552e8662076ae3c61866629bd0be6a5a0c';\n                        let url = 'https://api.github.com/repos/swat1508/repository-111/issues';\n\n                        fetch(url, {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json; charset=utf-8\",\n                                \"Authorization\": authorizationToken\n                            },\n                            body: JSON.stringify(newIssueJson)\n                        }).then(response => {\n                            debugger;\n                            statusCode = response.status;\n                            if (response.ok) {\n                                return response.json();\n                            } else {\n                                debugger;\n                                setRepoInWidgetForCreate(\"createIssue\", myArray, statusCode);\n                                // throw new Error('No response found');\n                            }\n                        }).then(jsonData => {\n                            myArray = jsonData;\n                            setRepoInWidgetForCreate(\"createIssue\", myArray, statusCode);\n                        }).catch(err => {\n                            debugger;\n                            console.log(\"Error:\", err.message);\n                        });\n                    } //create issue ends\n\n                    else if (myData.search(\"add comment\") != -1) {\n                            //Add Comment Starts\n\n                            alert(\"add comment\");\n                            var statusCode;\n\n                            var addCommentJson = {\n                                \"body\": \"This is comment on issue 2\"\n                            };\n\n                            var authorizationToken = 'token  032dfa552e8662076ae3c61866629bd0be6a5a0c';\n                            let url = 'https://api.github.com/repos/swat1508/repository-111/issues/2/comments';\n\n                            fetch(url, {\n                                method: \"POST\",\n                                headers: {\n                                    \"Content-Type\": \"application/json; charset=utf-8\",\n                                    \"Authorization\": authorizationToken\n                                },\n                                body: JSON.stringify(addCommentJson)\n                            }).then(response => {\n                                debugger;\n                                statusCode = response.status;\n                                if (response.ok) {\n                                    return response.json();\n                                } else {\n                                    debugger;\n                                    setRepoInWidgetForCreate(\"addComment\", myArray, statusCode);\n                                    // throw new Error('No response found');\n                                }\n                            }).then(jsonData => {\n                                debugger;\n                                myArray = jsonData;\n                                setRepoInWidgetForCreate(\"addComment\", myArray, statusCode);\n                            }).catch(err => {\n                                debugger;\n                                console.log(\"Error:\", err.message);\n                            });\n                        } //Add Comment Ends\n\n\n                        else if (myData.search(\"close issue\") != -1) {\n                                // Close Issue\n                                alert(\"Close Issues\");\n\n                                var statusCode;\n                                var closeIssueJson = {\n                                    \"state\": \"close\"\n                                };\n\n                                var authorizationToken = 'token  032dfa552e8662076ae3c61866629bd0be6a5a0c';\n                                var repoName = 'repository-111';\n                                var issueNumber = 4;\n                                let url = 'https://api.github.com/repos/swat1508/' + repoName + '/issues/' + issueNumber;\n                                fetch(url, {\n                                    method: \"PATCH\",\n                                    headers: {\n                                        \"Content-Type\": \"application/json; charset=utf-8\",\n                                        \"Authorization\": authorizationToken\n                                    },\n                                    body: JSON.stringify(closeIssueJson)\n                                }).then(response => {\n                                    debugger;\n                                    statusCode = response.status;\n                                    if (response.ok) {\n                                        return response.json();\n                                    } else {\n                                        debugger;\n                                        setRepoInWidgetForCreate(\"closeIssue\", myArray, statusCode);\n                                        throw new Error('No response found');\n                                    }\n                                }).then(jsonData => {\n                                    debugger;\n                                    myArray = jsonData;\n                                    setRepoInWidgetForCreate(\"closeIssue\", myArray, statusCode);\n                                }).catch(err => {\n                                    debugger;\n                                    console.log(\"Error:\", err.message);\n                                });\n                            } //close issue ends\n\n\n                            else {\n                                    alert(\"Type Suitable Command\");\n                                }\n    }\n\n    //Get Operation Ends\n    //return myArray;\n};\n\n$('#submitButton').on('click', processRequestsForGit);\n\n//processRequestsForGit);\nfunction setResponseInWidgetForView(operationType, myArray, statusCode) {\n    debugger;\n\n    debugger;\n    var tablearea = document.getElementById('myWidget');\n    var table = document.createElement('table');\n\n    //create table heading\n    if (operationType == \"viewRepo\") {\n        // View Repo Starts\n        debugger;\n\n        if (document.getElementById(\"tab_view_repo\")) {\n            alert(\"Data Data Already There For Repo\");\n            return;\n        }\n\n        // if(document.getElementById(\"tab_view_issue\")){\n        //     debugger;\n        //     document.getElementById('myWidget').removeChild;\n\n        // }\n\n\n        table.setAttribute(\"id\", \"tab_view_repo\");\n        var tr = document.createElement('tr');\n        tr.style.border = \"1px solid green\";\n        var td1 = document.createElement('td');\n        var td2 = document.createElement('td');\n        var td3 = document.createElement('td');\n\n        td1.style.border = \"1px solid blue\";\n        td2.style.border = \"1px solid blue\";\n        td3.style.border = \"1px solid blue\";\n\n        var text1 = document.createTextNode('REPO ID');\n        var text2 = document.createTextNode('REPO NAME');\n        var text3 = document.createTextNode('CLONE URL');\n\n        td1.appendChild(text1);\n        td2.appendChild(text2);\n        td3.appendChild(text3);\n        tr.appendChild(td1);\n        tr.appendChild(td2);\n        tr.appendChild(td3);\n        table.appendChild(tr);\n\n        //create table data\n        for (var i = 0; i < myArray.length; i++) {\n            var tr = document.createElement('tr');\n            tr.style.border = \"1px solid green\";\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var td3 = document.createElement('td');\n\n            td1.style.border = \"1px solid blue\";\n            td2.style.border = \"1px solid blue\";\n            td3.style.border = \"1px solid blue\";\n\n            var text1 = document.createTextNode(myArray[i].id);\n            var text2 = document.createTextNode(myArray[i].name);\n            var text3 = document.createTextNode(myArray[i].clone_url);\n\n            td1.appendChild(text1);\n            td2.appendChild(text2);\n            td3.appendChild(text3);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            tr.appendChild(td3);\n\n            table.appendChild(tr);\n        }\n        table.style.border = \"3px solid black\";\n\n        var para1 = document.createElement('p');\n        var para1Value = document.createTextNode('This is list of repositories');\n        para1.appendChild(para1Value);\n\n        tablearea.appendChild(para1);\n        tablearea.appendChild(table);\n    } // View Repo Ends\n    else if (operationType == \"viewIssue\") {\n            //View Issue Starts\n            debugger;\n            if (document.getElementById(\"tab_view_issue\")) {\n                alert(\"Data Data Already There For Issues\");\n                return;\n            }\n\n            table.setAttribute(\"id\", \"tab_view_issue\");\n            var tr = document.createElement('tr');\n            tr.style.border = \"1px solid green\";\n            var td = document.createElement('td');\n            var td0 = document.createElement('td');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var td3 = document.createElement('td');\n            var td4 = document.createElement('td');\n            var td5 = document.createElement('td');\n\n            td.style.border = \"1px solid blue\";\n            td0.style.border = \"1px solid blue\";\n            td1.style.border = \"1px solid blue\";\n            td2.style.border = \"1px solid blue\";\n            td3.style.border = \"1px solid blue\";\n            td4.style.border = \"1px solid blue\";\n            td5.style.border = \"1px solid blue\";\n\n            var text = document.createTextNode('Issue Number');\n            var text0 = document.createTextNode('Issue ID');\n            var text1 = document.createTextNode('Issue Body');\n            var text2 = document.createTextNode('Issue Title');\n            var text3 = document.createTextNode('Issue URL');\n            var text4 = document.createTextNode('Assignee Id');\n            var text5 = document.createTextNode('Assignee Name');\n\n            td.appendChild(text);\n            td0.appendChild(text0);\n            td1.appendChild(text1);\n            td2.appendChild(text2);\n            td3.appendChild(text3);\n            td4.appendChild(text4);\n            td5.appendChild(text5);\n\n            tr.appendChild(td);\n            tr.appendChild(td0);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            tr.appendChild(td3);\n            tr.appendChild(td4);\n            tr.appendChild(td5);\n\n            table.appendChild(tr);\n\n            //create table data\n            debugger;\n            for (var i = 0; i < myArray.length; i++) {\n                var tr = document.createElement('tr');\n                tr.style.border = \"1px solid green\";\n                var td = document.createElement('td');\n                var td0 = document.createElement('td');\n                var td1 = document.createElement('td');\n                var td2 = document.createElement('td');\n                var td3 = document.createElement('td');\n                var td4 = document.createElement('td');\n                var td5 = document.createElement('td');\n\n                td.style.border = \"1px solid blue\";\n                td0.style.border = \"1px solid blue\";\n                td1.style.border = \"1px solid blue\";\n                td2.style.border = \"1px solid blue\";\n                td3.style.border = \"1px solid blue\";\n                td4.style.border = \"1px solid blue\";\n                td5.style.border = \"1px solid blue\";\n\n                debugger;\n                var text = document.createTextNode(myArray[i].number);\n                var text0 = document.createTextNode(myArray[i].id);\n                var text1 = document.createTextNode(myArray[i].body);\n                var text2 = document.createTextNode(myArray[i].title);\n                var text3 = document.createTextNode(myArray[i].url);\n\n                var text4 = document.createTextNode(\"NA\");\n                if (myArray[i].assignee) {\n                    text4 = document.createTextNode(myArray[i].assignee.id);\n                }\n                var text5 = document.createTextNode(\"NA\");\n                if (myArray[i].assignee) {\n                    text5 = document.createTextNode(myArray[i].assignee.login);\n                }\n\n                td.appendChild(text);\n                td0.appendChild(text0);\n                td1.appendChild(text1);\n                td2.appendChild(text2);\n                td3.appendChild(text3);\n                td4.appendChild(text4);\n                td5.appendChild(text5);\n\n                tr.appendChild(td);\n                tr.appendChild(td0);\n                tr.appendChild(td1);\n                tr.appendChild(td2);\n                tr.appendChild(td3);\n                tr.appendChild(td4);\n                tr.appendChild(td5);\n\n                table.appendChild(tr);\n            }\n            table.style.border = \"3px solid black\";\n\n            var para1 = document.createElement('p');\n            var para1Value = document.createTextNode('This is list of issues');\n            para1.appendChild(para1Value);\n\n            tablearea.appendChild(para1);\n            tablearea.appendChild(table);\n        } //View Ends\n\n} //setResponseInWidgetForView  ends\n\n\nfunction setRepoInWidgetForCreate(operationType, myArray, statusCode) {\n    debugger;\n\n    alert(\"setResponseInWidgetForCreate : \" + statusCode);\n\n    if (document.getElementById(\"tab_creat_repo\")) {\n        alert(\"Data Already There\");\n        return;\n    }\n    //   if(document.getElementById(\"tab_create_issue\")){\n    //     document.getElementById(\"tab_create_issue\").remove;\n    //   }\n\n    if (operationType == \"createRepo\") {\n        if (statusCode == 201) {\n\n            var tablearea = document.getElementById('myWidget');\n            var table = document.createElement('table');\n\n            table.setAttribute(\"id\", \"tab_creat_repo\");\n\n            //create table data\n            debugger;\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoNameTag = document.createTextNode(\"Repo Name\"); //Repo Name\n            var repoName = document.createTextNode(myArray.name);\n            td1.appendChild(repoNameTag);\n            td2.appendChild(repoName);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoDescTag = document.createTextNode(\"Repo Desc\"); ////Repo Desc\n            var repoDesc = document.createTextNode(myArray.description);\n            td1.appendChild(repoDescTag);\n            td2.appendChild(repoDesc);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoIdTag = document.createTextNode(\"Repo Id\"); //Repo Id\n            var repoId = document.createTextNode(myArray.id);\n            td1.appendChild(repoIdTag);\n            td2.appendChild(repoId);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoCloneUrlTag = document.createTextNode(\"Repo Clone Url\"); //Repo Clone URL\n            var repoCloneUrl = document.createTextNode(myArray.clone_url);\n            td1.appendChild(repoCloneUrlTag);\n            td2.appendChild(repoCloneUrl);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoOwnerIdTag = document.createTextNode(\"Repo Owner Id\"); //Repo Owner Id\n            var repoOwnerId = document.createTextNode(myArray.owner.login);\n            td1.appendChild(repoOwnerIdTag);\n            td2.appendChild(repoOwnerId);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var repoOwnerNameTag = document.createTextNode(\"Repo Owner Login\"); //Repo Owner Login\n            var repoOwnerName = document.createTextNode(myArray.name);\n            td1.appendChild(repoOwnerNameTag);\n            td2.appendChild(repoOwnerName);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var para1 = document.createElement('p');\n            var para1Value = document.createTextNode('The new repository has been created successfully');\n            para1.appendChild(para1Value);\n            tablearea.appendChild(para1);\n\n            tablearea.appendChild(table);\n        } //201 ends\n        else if (statusCode == 422) {\n                var tablearea = document.getElementById('myWidget');\n                var para1 = document.createElement('p');\n                var para1Value = document.createTextNode('Repository with this name already exists');\n                para1.setAttribute(\"id\", \"tab_created\");\n                para1.appendChild(para1Value);\n                tablearea.appendChild(para1);\n            }\n    } //createRepo ends\n    else if (operationType == \"createIssue\") {\n            if (statusCode == 201) {\n\n                debugger;\n                var tablearea = document.getElementById('myWidget');\n                var table = document.createElement('table');\n\n                table.setAttribute(\"id\", \"tab_create_issue\");\n\n                //create table data\n                debugger;\n                var tr = document.createElement('tr');\n                var td1 = document.createElement('td');\n                var td2 = document.createElement('td');\n                var issueTitleTag = document.createTextNode(\"Issue Title\"); //Issue Title\n                var issueTitle = document.createTextNode(myArray.title);\n                td1.appendChild(issueTitleTag);\n                td2.appendChild(issueTitle);\n                tr.appendChild(td1);\n                tr.appendChild(td2);\n                table.appendChild(tr);\n\n                var tr = document.createElement('tr');\n                var td1 = document.createElement('td');\n                var td2 = document.createElement('td');\n                var issueDescTag = document.createTextNode(\"Issue Desc\"); //Issue Desc\n                var issueDesc = document.createTextNode(myArray.body);\n                td1.appendChild(issueDescTag);\n                td2.appendChild(issueDesc);\n                tr.appendChild(td1);\n                tr.appendChild(td2);\n                table.appendChild(tr);\n\n                var tr = document.createElement('tr');\n                var td1 = document.createElement('td');\n                var td2 = document.createElement('td');\n                var issueUrlTag = document.createTextNode(\"Issue URL\"); //Issue URL\n                var issueUrl = document.createTextNode(myArray.url);\n                td1.appendChild(issueUrlTag);\n                td2.appendChild(issueUrl);\n                tr.appendChild(td1);\n                tr.appendChild(td2);\n                table.appendChild(tr);\n\n                var tr = document.createElement('tr');\n                var td1 = document.createElement('td');\n                var td2 = document.createElement('td');\n                var issueAssigneeTag = document.createTextNode(\"Issue Assignee\"); //Issue Assignee\n                var issueAssignee = document.createTextNode(myArray.assignee.login);\n                td1.appendChild(issueAssigneeTag);\n                td2.appendChild(issueAssignee);\n                tr.appendChild(td1);\n                tr.appendChild(td2);\n                table.appendChild(tr);\n\n                var para1 = document.createElement('p');\n                var para1Value = document.createTextNode('The new issue has been created successfully');\n                para1.appendChild(para1Value);\n                tablearea.appendChild(para1);\n\n                tablearea.appendChild(table);\n            }\n        }\n\n    if (operationType == \"addComment\") {\n        if (statusCode == 201) {\n            var tablearea = document.getElementById('myWidget');\n            var table = document.createElement('table');\n\n            table.setAttribute(\"id\", \"tab_add_comment\");\n\n            //create table data\n            debugger;\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentIdTag = document.createTextNode(\"Comment ID\"); //Comment Id\n            var commentId = document.createTextNode(myArray.id);\n            td1.appendChild(commentIdTag);\n            td2.appendChild(commentId);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentBodyTag = document.createTextNode(\"Comment Body\"); //Commment URL\n            var commentBody = document.createTextNode(myArray.body);\n            td1.appendChild(commentBodyTag);\n            td2.appendChild(commentBody);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentUrlTag = document.createTextNode(\"Issue URL\"); //Commment URL\n            var commentUrl = document.createTextNode(myArray.issue_url);\n            td1.appendChild(commentUrlTag);\n            td2.appendChild(commentUrl);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var para1 = document.createElement('p');\n            var para1Value = document.createTextNode('The comment has been added to the issue');\n            para1.appendChild(para1Value);\n            tablearea.appendChild(para1);\n            tablearea.appendChild(table);\n        }\n    }\n\n    if (operationType == \"closeIssue\") {\n        if (statusCode == 200) {\n            var tablearea = document.getElementById('myWidget');\n            var table = document.createElement('table');\n\n            table.setAttribute(\"id\", \"tab_add_comment\");\n\n            //create table data\n            debugger;\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentNumberTag = document.createTextNode(\"Issue ID\"); //Comment Number\n            var commentNumber = document.createTextNode(myArray.number);\n            td1.appendChild(commentNumberTag);\n            td2.appendChild(commentNumber);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentIdTag = document.createTextNode(\"Comment Id\"); //Commment Id\n            var commentId = document.createTextNode(myArray.id);\n            td1.appendChild(commentIdTag);\n            td2.appendChild(commentId);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentBodyTag = document.createTextNode(\"Commment Body\"); //Commment Body\n            var commentBody = document.createTextNode(myArray.body);\n            td1.appendChild(commentBodyTag);\n            td2.appendChild(commentBody);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentTitleTag = document.createTextNode(\"Commment Title\"); //Commment Title\n            var commentTitle = document.createTextNode(myArray.title);\n            td1.appendChild(commentTitleTag);\n            td2.appendChild(commentTitle);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var tr = document.createElement('tr');\n            var td1 = document.createElement('td');\n            var td2 = document.createElement('td');\n            var commentStateTag = document.createTextNode(\"Commment State\"); //Commment State\n            var commentState = document.createTextNode(myArray.state);\n            td1.appendChild(commentStateTag);\n            td2.appendChild(commentState);\n            tr.appendChild(td1);\n            tr.appendChild(td2);\n            table.appendChild(tr);\n\n            var para1 = document.createElement('p');\n            var para1Value = document.createTextNode('The issue has been deleted');\n            para1.appendChild(para1Value);\n            tablearea.appendChild(para1);\n            tablearea.appendChild(table);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });